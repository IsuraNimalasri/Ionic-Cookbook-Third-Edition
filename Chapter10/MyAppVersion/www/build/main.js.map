{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/services/myenv.ts","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;;;;;;;;;;;;;;ACV2C;AACY;AAGvD;IACE,eAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAE9C,6BAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;IAC1C,CAAC;IALU,KAAK;QADjB,yEAAU,EAAE;yCAEqB,6EAAU;OAD/B,KAAK,CAMjB;IAAD,YAAC;CAAA;AANiB;;;;;;;;;;;;;;;;;;;;;;ACJwB;AACI;AACD;AAM7C;IAGE,kBAAoB,OAAsB,EAAS,KAAY;QAA3C,YAAO,GAAP,OAAO,CAAe;QAAS,UAAK,GAAL,KAAK,CAAO;IAAG,CAAC;IAEnE,6BAAU,GAAV;QAAA,iBAGC;QAFC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,cAAI,IAAI,QAAC,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,EAAjB,CAAiB,CAAC,CAAC;IAC7D,CAAC;IARU,QAAQ;QAJpB,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;WACG;SACzB,CAAC;iBAI+D;OAHpD,QAAQ,CASpB;IAAD,CAAC;AAAA;SATY,QAAQ,e;;;;;;;;;;;ACRsD;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACJM;AACH;AACkB;AACd;AACN;AACE;AACb;AAEF;AACM;AAoB9C;IAAA;IAAwB,CAAC;IAAZ,SAAS;QAlBrB,uEAAQ,CAAC;YACR,YAAY,EAAE,CAAC,6DAAK,EAAE,kEAAQ,CAAC;YAC/B,OAAO,EAAE,CAAC,gFAAa,EAAE,kEAAW,CAAC,OAAO,CAAC,6DAAK,EAAE,EAAE,EACxD;oBACE,KAAK,EAAE,EAEN;iBACF,CAAC,CAAC;YACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;YACrB,eAAe,EAAE,CAAC,6DAAK,EAAE,kEAAQ,CAAC;YAClC,SAAS,EAAE;gBACT,2EAAS;gBACT,iFAAY;gBACZ,6EAAU;gBACV,8DAAK;gBACL,EAAE,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAE;aACvD;SACF,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AC7BoB;AACD;AACY;AACM;AAEb;AAI9C;IAGE,eAAY,QAAkB,EAAE,SAAoB,EAAE,YAA0B;QAFhF,aAAQ,GAAO,kEAAQ,CAAC;QAGtB,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,gEAAgE;YAChE,iEAAiE;YACjE,SAAS,CAAC,YAAY,EAAE,CAAC;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAVU,KAAK;QAHjB,wEAAS,CAAC;WACc;SACxB,CAAC;cAIgF;OAHrE,KAAK,CAWjB;IAAD,CAAC;AAAA;SAXY,KAAK,2B","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 110;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 110\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 151;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 151\n// module chunks = 0","import { Injectable } from \"@angular/core\";\nimport { AppVersion } from \"@ionic-native/app-version\";\n\n@Injectable()\nexport class MyEnv {\n  constructor(private appVersion: AppVersion) {}\n\n  getAppVersion() {\n    return this.appVersion.getVersionCode();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/myenv.ts","import { Component } from \"@angular/core\";\nimport { NavController } from \"ionic-angular\";\nimport { MyEnv } from \"../../services/myenv\";\n\n@Component({\n  selector: \"page-home\",\n  templateUrl: \"home.html\"\n})\nexport class HomePage {\n  public ver: string;\n\n  constructor(private navCtrl: NavController, public myEnv: MyEnv) {}\n\n  getVersion() {\n    console.log(this.myEnv.getAppVersion());\n    this.myEnv.getAppVersion().then(data => (this.ver = data));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from \"@angular/platform-browser\";\nimport { ErrorHandler, NgModule } from \"@angular/core\";\nimport { IonicApp, IonicErrorHandler, IonicModule } from \"ionic-angular\";\nimport { SplashScreen } from \"@ionic-native/splash-screen\";\nimport { StatusBar } from \"@ionic-native/status-bar\";\nimport { AppVersion } from \"@ionic-native/app-version\";\nimport { MyEnv } from \"../services/myenv\";\n\nimport { MyApp } from \"./app.component\";\nimport { HomePage } from \"../pages/home/home\";\n\n@NgModule({\n  declarations: [MyApp, HomePage],\n  imports: [BrowserModule, IonicModule.forRoot(MyApp)],\n  bootstrap: [IonicApp],\n  entryComponents: [MyApp, HomePage],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    AppVersion,\n    MyEnv,\n    { provide: ErrorHandler, useClass: IonicErrorHandler }\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}